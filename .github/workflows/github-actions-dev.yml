#!/bin/bash

name: Development
run-name: ${{ github.sha }}
on: push
jobs:

  pull:
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - run: echo "LC_REPOSITORY=${UC_REPOSITORY,,}" >> ${GITHUB_ENV}
        env:
          UC_REPOSITORY: '${{ github.repository }}'
      - run: docker pull ghcr.io/${LC_REPOSITORY}:latest

  build:
    runs-on: self-hosted
    needs: pull
    steps:
      - uses: actions/checkout@v4
      - run: docker build -t ${{ github.sha }}:${{ github.ref_name }} .

  lint:
    runs-on: self-hosted
    needs: build
    steps:
      - run: export GITHUB_SHA=${{ github.sha }}
      - run: export GITHUB_REF_NAME=${{ github.ref_name }}
      - run: echo "${GITHUB_SHA}:${GITHUB_REF_NAME}"
      - run: docker compose -p "${{ github.sha }}" -f docker-compose.ci.yml run backend flake8 .

  push-latest:
    runs-on: self-hosted
    needs: lint
    permissions: write-all
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "LC_REPOSITORY=${UC_REPOSITORY,,}" >> ${GITHUB_ENV}
        env:
          UC_REPOSITORY: '${{ github.repository }}'
      - run: docker tag "${GITHUB_SHA}:${GITHUB_REF_NAME}" ghcr.io/${LC_REPOSITORY}:latest
      - run: docker push ghcr.io/${LC_REPOSITORY}:latest

  cleanup:
    runs-on: self-hosted
    needs: push-latest
    if: ${{ always() }}
    steps:
      - run: docker rmi -f "${GITHUB_SHA}:${GITHUB_REF_NAME}"
      - run: docker compose -p "$GITHUB_SHA" -f docker-compose.ci.yml down --remove-orphans